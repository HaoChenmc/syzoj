<% this.title = homework.id ? '编辑作业' : '新建作业' %>
<% include header %>
<% include monaco-editor %>
<div class="padding">
    <form action="<%= syzoj.utils.makeUrl(['homework', homework.id, 'edit']) %>" method="post">
        <div class="ui form">
            <div class="field">
                <label>作业名称</label>
                <input type="text" name="title" value="<%= homework.title %>">
            </div>
            <div class="field">
                <label>作业描述</label>
            </div>
        </div>
        <div id="subtitle" class="editor editor-with-border" style="height: 100px; width: 100%; margin-bottom: 1em; ">
            <%- this.showLoadingEditor(); %>
        </div>
        <input type="hidden" name="subtitle">
        <div class="ui form">
            <div class="field">
                <label>题目列表</label>
                <select class="ui fluid search dropdown" multiple="" id="search_problems" name="problems">
                    <% for (let problem of problems) { %>
                        <option value="<%= problem.id %>" selected>#<%= problem.id %>. <%= problem.title %></option>
                    <% } %>
                </select>
            </div>
            <div class="field">
                <label>作业信息</label>
            </div>
        </div>
        <div id="information" class="editor editor-with-border"
             style="height: 100px; width: 100%; margin-bottom: 1em; ">
            <%- this.showLoadingEditor(); %>
        </div>
        <input type="hidden" name="information">
        <div class="ui form">
            <div class="disabled field">
                <label>公开作业(暂不可用)</label>
                <div class="ui toggle checkbox" >
                    <input name="is_public" id="is_public"
                           type="checkbox" tabindex="0" class="hidden"
                           <% if(homework.is_public) { %>checked
                            <% } %>
                    >
                    <label>公开后已经加入作业的用户不受到等级限制的影响</label>
                </div>
            </div>
            <div id="level-field" class="field" <% if(!homework.is_public) { %>hidden<% } %>>
                <label class="ui header ">用户等级限制</label>
                <div class="ui left labeled right labeled input" style="width: 45px">
                    <button id="level-less" onclick="levelLess()" type="button"
                            class="ui <% if(homework.allow_level === 0) { %>disabled <% } %>green button label">
                        -
                    </button>
                    <input id="allow_level" name="allow_level" type="text" style="text-align: center"
                           value="<%= homework.allow_level %>">
                    <button id="level-add" onclick="levelAdd()" type="button"
                            class="ui <% if(homework.allow_level === syzoj.config.max_level) { %>disabled <% } %>red button label">
                        +
                    </button>
                </div>
            </div>
            <div style="text-align: center; ">
                <button id="submit_button" type="submit" class="ui disabled labeled icon blue button"><i
                            class="ui edit icon"></i>提交
                </button>
            </div>
        </div>
    </form>
</div>
<script>
  var editors = {
    subtitle: {defaultValue: <%- serializejs(homework.subtitle) %> },
    information: {defaultValue: <%- serializejs(homework.information) %> }
  };

  window.onEditorLoaded(function () {
    for (var name in editors) {
      var editor = editors[name];
      var editorElement = document.getElementById(name);
      var input = document.getElementsByName(name)[0];
      editor.editor = window.createMarkdownEditor(editorElement, editor.defaultValue, input);
    }

    $('#submit_button').removeClass('disabled');
  });

  $(function () {
    $('#search_problems')
      .dropdown({
        debug: true,
        apiSettings: {
          url: '/api/v2/search/problems/{query}',
          onResponse: function (response) {
            var a = $('#search_problems').val().map(function (x) {
              return parseInt(x)
            });
            if (response.results) {
              response.results = response.results.filter(function (x) {
                return !a.includes(parseInt(x.value));
              });
            }
            return response;
          },
          cache: false
        }
      });
    $('.ui.checkbox').checkbox();
    $('#is_public').change(function () {
      if($('#is_public').is(":checked")) {
        $("#level-field").show();
      } else {
        $("#level-field").hide();
      }
    });

  });
  const allow_level = $("#allow_level");

  function levelAdd() {

    let level = parseInt(allow_level.val());
    if (isNaN(level)) level =<%- serializejs(homework.allow_level) %>;
    if (level === 0) {
      $("#level-less").removeClass("disabled");
    }
    level++;
    if (level === <%- serializejs(syzoj.config.max_level) %>) {
      $("#level-add").addClass("disabled");
    }
    allow_level.val(level);
  }

  function levelLess() {
    let level = parseInt(allow_level.val());
    if (isNaN(level)) level =<%- serializejs(homework.allow_level) %>;
    if (level === <%- serializejs(syzoj.config.max_level) %>) {
      $("#level-add").removeClass("disabled");
    }
    level--;
    if (level === 0) {
      $("#level-less").addClass("disabled");
    }
    allow_level.val(level);
  }
</script>
<% include footer %>
